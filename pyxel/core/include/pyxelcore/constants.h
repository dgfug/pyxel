#ifndef PYXELCORE_CONSTANTS_H_
#define PYXELCORE_CONSTANTS_H_

#include <cstdint>
#include <map>
#include <string>

namespace pyxelcore {

const int32_t COLOR_COUNT = 16;

const int32_t IMAGE_BANK_COUNT = 4;
const int32_t IMAGE_BANK_WIDTH = 256;
const int32_t IMAGE_BANK_HEIGHT = 256;

const std::string VERSION = "1.1.0";

const std::string DEFAULT_CAPTION = "Pyxel";
const int32_t DEFAULT_SCALE = 4;
const int32_t DEFAULT_PALETTE[] = {
    0x000000, 0x1D2B53, 0x7E2553, 0x008751, 0xAB5236, 0x5F574F,
    0xC2C3C7, 0xFFF1E8, 0xFF004D, 0xFFA300, 0xFFEC27, 0x00E436,
    0x29ADFF, 0x83769C, 0xFF77A8, 0xFFCCAA,
};

const int32_t DEFAULT_FPS = 30;
const int32_t DEFAULT_BORDER_WIDTH = 0;
const int32_t DEFAULT_BORDER_COLOR = 0x101018;

const std::string ICON_DATA[] = {
    "0000000110000000", "0000011F71100000", "00011FF11FF11000",
    "011FF111111FF110", "1AE1111111111C71", "1E1EE111111CC1C1",
    "1E111EE11CC111C1", "1E11111E711111C1", "1E111111C11111C1",
    "1E111111C11111C1", "1E111111C11111C1", "1AE11111C1111C71",
    "011EE111C11CC110", "00011EE1CCC11000", "0000011E71100000",
    "0000000110000000",
};

const int32_t MOUSE_CURSOR_IMAGE_X = 0;
const int32_t MOUSE_CURSOR_IMAGE_Y = 16;
const int32_t MOUSE_CURSOR_WIDTH = 8;
const int32_t MOUSE_CURSOR_HEIGHT = 8;

const std::string MOUSE_CURSOR_DATA[] = {
    "00000011", "07776011", "07760111", "07676011",
    "06067601", "00106760", "11110601", "11111011",
};

const uint32_t FONT_DATA[] = {
    0x000000, 0x444040, 0xAA0000, 0xAEAEA0, 0x6C6C40, 0x824820, 0x4A4AC0,
    0x440000, 0x244420, 0x844480, 0xA4E4A0, 0x04E400, 0x000480, 0x00E000,
    0x000040, 0x224880, 0x6AAAC0, 0x4C4440, 0xC248E0, 0xC242C0, 0xAAE220,
    0xE8C2C0, 0x68EAE0, 0xE24880, 0xEAEAE0, 0xEAE2C0, 0x040400, 0x040480,
    0x248420, 0x0E0E00, 0x842480, 0xE24040, 0x4AA860, 0x4AEAA0, 0xCACAC0,
    0x688860, 0xCAAAC0, 0xE8E8E0, 0xE8E880, 0x68EA60, 0xAAEAA0, 0xE444E0,
    0x222A40, 0xAACAA0, 0x8888E0, 0xAEEAA0, 0xCAAAA0, 0x4AAA40, 0xCAC880,
    0x4AAE60, 0xCAECA0, 0x6842C0, 0xE44440, 0xAAAA60, 0xAAAA40, 0xAAEEA0,
    0xAA4AA0, 0xAA4440, 0xE248E0, 0x644460, 0x884220, 0xC444C0, 0x4A0000,
    0x0000E0, 0x840000, 0x06AA60, 0x8CAAC0, 0x068860, 0x26AA60, 0x06AC60,
    0x24E440, 0x06AE24, 0x8CAAA0, 0x404440, 0x2022A4, 0x8ACCA0, 0xC444E0,
    0x0EEEA0, 0x0CAAA0, 0x04AA40, 0x0CAAC8, 0x06AA62, 0x068880, 0x06C6C0,
    0x4E4460, 0x0AAA60, 0x0AAA40, 0x0AAEE0, 0x0A44A0, 0x0AA624, 0x0E24E0,
    0x64C460, 0x444440, 0xC464C0, 0x6C0000, 0xEEEEE0,
};

const int32_t APP_SCREEN_MAX_SIZE = 255;
const int32_t APP_SCREEN_SCALE_CUTDOWN = 2;
const int32_t APP_SCREEN_SCALE_MINIMUM = 2;
const int32_t APP_GIF_CAPTURE_COUNT = 900;
const int32_t APP_GIF_CAPTURE_SCALE = 2;
const int32_t APP_MEASURE_FRAME_COUNT = 10;

const int32_t RENDERER_IMAGE_COUNT = 4;
const int32_t RENDERER_IMAGE_WIDTH = 256;
const int32_t RENDERER_IMAGE_HEIGHT = 256;
const int32_t RENDERER_TILEMAP_COUNT = 8;
const int32_t RENDERER_TILEMAP_WIDTH = 256;
const int32_t RENDERER_TILEMAP_HEIGHT = 256;
const int32_t RENDERER_MIN_TEXTURE_SIZE = 256;

const int32_t FONT_MIN_CODE = 32;
const int32_t FONT_MAX_CODE = 127;
const int32_t FONT_WIDTH = 4;
const int32_t FONT_HEIGHT = 6;
const int32_t FONT_ROW_COUNT = RENDERER_IMAGE_WIDTH / FONT_WIDTH;

const int32_t AUDIO_SAMPLE_RATE = 22050;
const int32_t AUDIO_BLOCK_SIZE = 2205;
const int32_t AUDIO_CHANNEL_COUNT = 4;
const int32_t AUDIO_SOUND_COUNT = 65;
const int32_t AUDIO_MUSIC_COUNT = 8;
const int32_t AUDIO_ONE_SPEED = AUDIO_SAMPLE_RATE / 120;
const int32_t AUDIO_ONE_VOLUME = 0x7FFF / (AUDIO_CHANNEL_COUNT * 7);

const int32_t SOUND_TONE_TRIANGLE = 0;
const int32_t SOUND_TONE_SQUARE = 1;
const int32_t SOUND_TONE_PULSE = 2;
const int32_t SOUND_TONE_NOISE = 3;
const int32_t SOUND_EFFECT_NONE = 0;
const int32_t SOUND_EFFECT_SLIDE = 1;
const int32_t SOUND_EFFECT_VIBRATO = 2;
const int32_t SOUND_EFFECT_FADEOUT = 3;

const int32_t SOUND_NOTE_C = 0;
const int32_t SOUND_NOTE_D = 2;
const int32_t SOUND_NOTE_E = 4;
const int32_t SOUND_NOTE_F = 5;
const int32_t SOUND_NOTE_G = 7;
const int32_t SOUND_NOTE_A = 9;
const int32_t SOUND_NOTE_B = 11;

}  // namespace pyxelcore

#endif  // PYXELCORE_AUDIO_H_
